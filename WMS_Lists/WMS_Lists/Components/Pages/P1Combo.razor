@page "/p1combo"
@using Microsoft.EntityFrameworkCore
@attribute [StreamRendering]
@rendermode InteractiveServer
@inject Services.DataService DataService
 
<PageTitle>P1 WMS</PageTitle>

<h1>P1 WMS Values</h1>

@if (p1_wms != null)
{
    <MudDataGrid T="Data.P1Combo" MultiSelection="false" Hover="true" Hideable="true" Items="@p1_wms" Filterable="true" QuickFilter="@_quickFilter">
        <ToolBarContent>
            <MudText Typo="Typo.h6">WMS P1 List</MudText>
            <MudSpacer />
            <MudTextField @bind-Value="_searchString" Placeholder="Search" Adornment="Adornment.Start" Immediate="true"
            AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
        </ToolBarContent>
        <Columns>
            <PropertyColumn Property="x => x.WO"/>
            <PropertyColumn Property="x => x.Length" Format="##.####"/>
            <PropertyColumn Property="x => x.Weight" Title="Weight (Lbs)" Format="###.####" />
            <PropertyColumn Property="x => x.DateAndTime" Title="Date and Time" />
        </Columns>

        <PagerContent>
            <MudDataGridPager T="Data.P1Combo" />
        </PagerContent>
    </MudDataGrid>
}

@code {
    private List<Data.P1Combo>? p1_wms = null;

    private string _searchString = "";

    private Func<Data.P1Combo, bool> _quickFilter => x =>
    {
        if (string.IsNullOrWhiteSpace(_searchString))
            return true;
        if (x.DateAndTime.ToString().Contains(_searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (x.Millitm.ToString().Contains(_searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if ($"{x.Length:##.####}".Contains(_searchString))
            return true;
        if ($"{x.Weight:###.####}".Contains(_searchString))
            return true;
        if ($"{x.WO}".Contains(_searchString))
        return true;

        return false;
    };

    protected override async Task OnInitializedAsync()
    {
        try
        {
            p1_wms = await DataService.SkipIrrelevantWMSP1<Data.P1Combo>(700000);
        }
        catch(Exception ex)
        {
            Console.WriteLine($"Error loading data: {ex.Message}");
            p1_wms = new List<Data.P1Combo>();
        }

    }
}
