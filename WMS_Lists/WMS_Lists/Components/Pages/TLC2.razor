@page "/p1tlc2combo"
@using Microsoft.EntityFrameworkCore
@attribute [StreamRendering]
@rendermode InteractiveServer
@inject Services.DataService DataService

<PageTitle>P1 WMS Threading</PageTitle>

<h3>Casing 2</h3>

@if (tlc2_wms != null)
{
<MudDataGrid T="Data.P1TLC2Combo" MultiSelection="false" Hover="true" Hideable="true" Items="@tlc2_wms" Filterable="true" QuickFilter="@_quickFilter">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Casing 2 List</MudText>
        <MudSpacer />
        <MudTextField @bind-Value="_searchString" Placeholder="Search" Adornment="Adornment.Start" Immediate="true"
                      AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <Columns>
        <TemplateColumn Title="WO" SortBy="x => x.WO">
            <CellTemplate>
                @{
                    var wo = context.Item.WO.ToString();
                    var formattedWO = wo.Length <= 3 ? $"TH0{wo.PadLeft(3, '0')}" : $"TH{wo}";
                }
                @formattedWO
            </CellTemplate>
        </TemplateColumn>
        <PropertyColumn Property="x => x.Length" Format="##.####" />
        <PropertyColumn Property="x => x.DateAndTime" Title="Date and Time" />
    </Columns>

    <PagerContent>
        <MudDataGridPager T="Data.P1TLC2Combo" />
    </PagerContent>
</MudDataGrid>
}

@code {
    private List<Data.P1TLC2Combo>? tlc2_wms = null;

    private string _searchString = "";

    private Func<Data.P1TLC2Combo, bool> _quickFilter => x =>
    {
        if (string.IsNullOrWhiteSpace(_searchString))
            return true;
        if (x.DateAndTime.ToString().Contains(_searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if ($"{x.Length:##.####}".Contains(_searchString))
            return true;
        string formattedWO = FormatWO(x.WO.ToString());
        if (formattedWO.Contains(_searchString, StringComparison.OrdinalIgnoreCase))
            return true;

        return false;
    };

    protected override async Task OnInitializedAsync()
    {
        try
        {
            tlc2_wms = await DataService.GetAllWMSP1<Data.P1TLC2Combo>();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading data: {ex.Message}");
            tlc2_wms = new List<Data.P1TLC2Combo>();
        }

    }

    private string FormatWO(string wo)
    {
        if (string.IsNullOrEmpty(wo))
            return string.Empty;

        wo = wo.ToString();
        return wo.Length <= 3 ? $"TH0{wo.PadLeft(3, '0')}" : $"TH{wo}";
    }
}
